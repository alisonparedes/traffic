if __name__ == "__main__":
    import sys
    print(sys.path)

    t = 100  # seconds
    flows = {}
    flows[("L1202_3967", "sink")] = 1
    flows[("L6013_1202", "L1202_3967")] = 1
    flows[("L1349_1202", "L1202_3967")] = 1

    from gurobipy import *
    m = Model("transition")



    # Edges into network

    # Edges out of network
    L1202_3967_sink = m.addVar(vtype=GRB.INTEGER, name="L1202_3967_sink")

    # All other edges
    L6013_1202__L1202_3967 = m.addVar(vtype=GRB.INTEGER, name="L6013_1202__L1202_3967")
    L1349_1202__L1202_3967 = m.addVar(vtype=GRB.INTEGER, name="L1349_1202__L1202_3967")

    m.setObjective(L1202_3967_sink
                   + L6013_1202_L1202_3967
                   + L1349_1202_L1202_3967
                   , GRB.MAXIMIZE)

    # Maximum capacities
    '''
    m.addConstr(L6013_1202_L1202_3967
                + L1349_1202_L1202_3967
                - L1202_3967_sink 
                <= 20, 
                "cap_L1202_3967")
    '''
    m.addConstr(L6013_1202__L1202_1349
                + L3966_1202__L1202_1349
                - L1202_1349__L1349_1867
                - L1202_1349__L1349_3621
                <= 88
                , "L1202_1349")
    m.addConstr(L6013_1202__L1202_3967
                + L1349_1202__L1202_3967
                - L1202_3967__outside
                <= 138
                , "L1202_3967")
    m.addConstr(L1349_1202__L1202_6013
                + L3966_1202__L1202_6013
                - L1202_6013__L6013_5840
                - L1202_6013__L6013_6014
                <= 61
                , "L1202_6013")
    m.addConstr(outside__L1216_1352
                - L1216_1352__L1352_1867
                - L1216_1352__outside
                <= 13
                , "L1216_1352") # There may be a bug in the original model here.
    m.addConstr(outside__L1233_1352
                - L1233_1352__L1352_1353
                - L1233_1352__L1352_1867
                - L1233_1352__outside
                <= 30
                , "L1233_1352") # Here too
    m.addConstr(L1353_1349__L1349_1202
                + L3621_1349__L1349_1202
                + L1867_1349__L1349_1202
                - L1349_1202__L1202_3967
                - L1349_1202__L1202_6013
                <= 89
                , "L1349_1202")
    m.addConstr(L3621_1349__L1349_1353
                + L1867_1349__L1349_1353
                - L1349_1353__L1353_1352
                - L1349_1353__outside
                <= 78
                , "L1349_1353")
    m.addConstr(L1353_1349__L1349_1867
                + L1202_1349__L1349_1867
                - L1349_1867__L1867_1352
                - L1349_1867__L1867_4574
                <= 63
                , "L1349_1867")
    m.addConstr(L1867_1349__L1349_3621
                + L1202_1349__L1349_3621
                + L1353_1349__L1349_3621
                - L1349_3621__outside
                <= 181
                , "L1349_3621")
    m.addConstr(L1867_1352__L1352_1353
                + L1233_1352__L1352_1353
                - L1352_1353__L1353_6014
                - L1352_1353__outside
                <= 60
                , "L1352_1353")
    m.addConstr(L1216_1352__L1352_1867
                + L1233_1352__L1352_1867
                - L1352_1867__L1867_1349
                - L1352_1867__L1867_3621
                - L1352_1867__L1867_4574
                <= 73
                , "L1352_1867")
    m.addConstr(L6159_1353__L1353_1349
                + L6014_1353__L1353_1349
                - L1353_1349__L1349_1202
                - L1353_1349__L1349_1867
                - L1353_1349__L1349_3621
                <= 88, "L1353_1349")
    m.addConstr(L1349_1353__L1353_1352
                + L6159_1353__L1353_1352
                + L6014_1353__L1353_1352
                - L1353_1352__outside
                <= 119
                , "L1353_1352")  # And this one
    m.addConstr(L1352_1353__L1353_6014
                + L1352_1353__L1353_6014
                - L1353_6014__L6014_6013
                - L1353_6014__outside
                <= 24
                , "L1353_6014")
    m.addConstr(L3621_1867__L1867_1349
                + L1352_1867__L1867_1349
                + L4574_1867__L1867_1349
                - L1867_1349__L1349_1202
                - L1867_1349__L1349_1353
                - L1867_1349__L1349_3621
                <= 104
                , "L1867_1349")
    m.addConstr(L4574_1867__L1867_1352
                + L1349_1867__L1867_1352
                + L3621_1867__L1867_1352
                - L1867_1352__L1352_1353
                - L1867_1352__outside
                <= 128
                , "L1867_1352")
    m.addConstr(L4574_1867__L1867_3621
                + L1352_1867__L1867_3621
                - L1867_3621__outside
                <= 19
                , "L1867_3621")
    m.addConstr(L4574_1867__L1867_3621
                + L1352_1867__L1867_3621
                - L1867_3621__outside
                <= 62 # A bug? Weaker constraint than above
                , "L1867_3621")
    m.addConstr(L1349_1867__L1867_4574
                + L1352_1867__L1867_4574
                + L3621_1867__L1867_4574
                - L1867_4574__outside
                <=82
                , "L1867_4574")
    m.addConstr(- L3621_1349__L1349_1202
                - L3621_1349__L1349_1353
                <= 75
                , "L3621_1349") # This constraint is always true
    m.addConstr(outside__L3621_1867
                - L3621_1867__L1867_1349
                - L3621_1867__L1867_1352
                - L3621_1867__L1867_4574
                <=60
                , "L3621_1867")
    m.addConstr(- L3966_1202__L1202_1349
                - L3966_1202__L1202_6013
                <= 101 # Always true
                , "L3966_1202")
    m.addConstr(- L4574_1867__L1867_1349
                - L4574_1867__L1867_1352
                - L4574_1867__L1867_3621
                <= 179 # Always true
                , "L4574_1867")
    m.addConstr(outside__L5840_6013
                - L5840_6013__L6013_1202
                - L5840_6013__L6013_6014
                <= 40
                , "L5840_6013")
    m.addConstr(L5840_6013__L6013_1202
                + L6014_6013__L6013_1202
                - L6013_1202__L1202_1349
                - L6013_1202__L1202_3967
                <=35
                , "L6013_1202")
    m.addConstr(L1202_6013__L6013_5840
                + L6014_6013__L6013_5840
                - L6013_5840__outside
                <= 24
                , "L6013_5840")
    m.addConstr(L1202_6013__L6013_6014
                + L5840_6013__L6013_6014
                - L6013_6014__L6014_1353
                - L6013_6014__outside
                <= 94
                , "L6013_6014")
    m.addConstr(L6013_6014__L6014_1353
                + L6159_6014__L6014_1353
                - L6014_1353__L1353_1349
                - L6014_1353__L1353_1352
                <= 23, "L6014_1353")
    m.addConstr(L1353_6014__L6014_6013
                + L6159_6014__L6014_6013
                - L6014_6013__L6013_1202
                - L6014_6013__L6013_5840
                <= 94
                , "L6014_6013")
    m.addConstr(outside__L6159_1353
                - L6159_1353__L1353_1349
                - L6159_1353__L1353_1352
                <= 24
                , "L6159_1353")
    m.addConstr(outside__L6159_6014
                - L6159_6014__L6014_1353
                - L6159_6014__L6014_6013
                <= 218
                , "L6159_6014")

    # Maximum flow
    m.addConstr(L1202_3967_sink <= 0.49333 * t * flows["L1202_3967_sink"])
    m.addConstr(L6013_1202_L1202_3967 <= 0.41067 * t * flows["L6013_1202_L1202_3967"])
    m.addConstr(L1349_1202_L1202_3967 <= 0.825 * t * flows["L1349_1202_L1202_3967"])

    # Non-negative
    m.addConstr(L1202_3967_sink >= 0)
    m.addConstr(L6013_1202_L1202_3967 >= 0)
    m.addConstr(L1349_1202_L1202_3967 >= 0)



    ''''
    fij = m.addVar(vtype=GRB.INTEGER, name="fij")
    fkj = m.addVar(vtype=GRB.INTEGER, name="fkj")

    # Set objective
    m.setObjective(fij + fkj, GRB.MAXIMIZE)

    # Add constraint: x + 2 y + 3 z <= 4
    m.addConstr(fij + fkj <= 1, "c0")
    m.addConstr(fij >= 0, "c1")
    m.addConstr(fkj >= 0, "c2")
    m.addConstr(fij <= 1)
    m.addConstr(fkj <= 10)
    '''


    m.optimize()

    for v in m.getVars():
        print('%s %g' % (v.varName, v.x))
    print('Obj: %g' % m.objVal)